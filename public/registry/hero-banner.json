{
  "name": "hero-banner",
  "type": "registry:ui",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\nexport type HeroBannerProps<\n  M extends React.ElementType = \"img\",\n  L extends React.ElementType = \"a\"\n> = Partial<{\n  // Content\n  content: Partial<{\n    title: string;\n    subtitle: string;\n    description: string;\n  }>;\n  // Custom styles\n  bgColor: string;\n  color: string;\n  fullWidth: boolean;\n  headingType: \"hero\" | \"inline\";\n  textAlign: \"left\" | \"center\" | \"right\";\n  // Custom components\n  LinkComponent: L;\n  MediaComponent: M;\n  mediaProps: React.ComponentPropsWithoutRef<M>;\n  linkProps: React.ComponentPropsWithoutRef<L>;\n}>;\n\nexport function HeroBanner({\n  content,\n  bgColor,\n  color,\n  fullWidth,\n  headingType,\n  textAlign,\n  MediaComponent = \"img\",\n  LinkComponent = \"a\",\n  mediaProps,\n  linkProps,\n  ...props\n}: React.ComponentProps<\"div\"> & HeroBannerProps) {\n  const isInlineType = headingType === \"inline\";\n  const Title = isInlineType ? \"h1\" : \"div\";\n  const Subtitle = isInlineType ? \"h2\" : \"div\";\n  const Description = isInlineType ? \"p\" : \"div\";\n\n  return (\n    <section\n      {...props}\n      className={cn(\n        \"max-h-screen overflow-hidden flex justify-center content-center items-center relative\",\n        !bgColor && \"bg-muted\",\n        !color && \"text-muted-foreground\",\n        fullWidth ? \"w-full\" : \"max-w-screen-xl mx-auto\",\n        props.className\n      )}\n      style={{\n        backgroundColor: bgColor ?? \"\",\n        color: color ?? \"\",\n        ...props.style,\n      }}\n    >\n      {mediaProps && (\n        <MediaComponent\n          {...mediaProps}\n          className={cn(\n            \"object-cover w-full h-full md:min-h-96\",\n            mediaProps.className\n          )}\n          style={{\n            aspectRatio: `${mediaProps.width}/${mediaProps.height}`,\n            ...mediaProps.style,\n          }}\n        />\n      )}\n\n      <div className=\"absolute pt-12 px-8 pb-4 md:pt-24 md:px-16 md:pb-8 w-full h-full flex justify-center items-center\">\n        <div\n          className={cn(\n            \"container flex flex-col gap-3 md:gap-6 drop-shadow-lg\",\n            textAlign === \"left\" && \"items-start\",\n            textAlign === \"center\" && \"items-center\",\n            textAlign === \"right\" && \"items-end\"\n          )}\n        >\n          {content?.subtitle && (\n            <Subtitle className=\"text-sm\">{content?.subtitle}</Subtitle>\n          )}\n\n          {content?.title && (\n            <Title className=\"text-4xl md:text-6xl\">{content?.title}</Title>\n          )}\n\n          {content?.description && (\n            <Description className=\"text-md md:text-lg\">\n              {content?.description}\n            </Description>\n          )}\n\n          {linkProps && (\n            <Button\n              asChild\n              variant=\"secondary\"\n              className={cn(\"px-8 py-6 text-base\")}\n            >\n              <LinkComponent {...linkProps} />\n            </Button>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "path": "ui/hero-banner.tsx",
      "target": "components/ui/hero-banner.tsx"
    }
  ]
}